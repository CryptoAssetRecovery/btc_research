[tool.poetry]
name = "btc-research"
version = "0.1.0"
description = "A modular research harness for Bitcoin trading strategies with multi-timeframe indicator support"
authors = ["BTC Research Team <team@btc-research.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "btc_research"}]

[tool.poetry.dependencies]
python = "^3.11"
pandas = "^2.0.0"
numpy = "^1.24.0"
scipy = "^1.10.0"
ccxt = "^4.0.0"
backtrader = "^1.9.78"
pyyaml = "^6.0"
jsonschema = "^4.17.0"
ta = "^0.10.2"
scikit-learn = "^1.3.0"
tqdm = "^4.65.0"
matplotlib = "^3.7.0"
seaborn = "^0.12.0"
plotly = "^5.17.0"

[tool.poetry.group.dev.dependencies]
black = "^23.0.0"
ruff = "^0.1.0"
pytest = "^7.0.0"
pre-commit = "^3.0.0"
mypy = "^1.0.0"
pytest-cov = "^4.0.0"
bandit = {extras = ["toml"], version = "^1.7.0"}
safety = "^2.3.0"
psutil = "^5.9.0"

[tool.poetry.scripts]
btc-download = "btc_research.cli.download:main"
btc-backtest = "btc_research.cli.backtest:main"
btc-optimise = "btc_research.cli.optimise:main"
btc-visualize = "btc_research.cli.visualize:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
target-version = "py311"
line-length = 88

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["S101", "D"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
no_implicit_reexport = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["btc_research"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]